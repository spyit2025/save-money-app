rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ฟังก์ชันสำหรับตรวจสอบว่าผู้ใช้เข้าสู่ระบบแล้ว
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ฟังก์ชันสำหรับตรวจสอบว่าผู้ใช้เป็นเจ้าของข้อมูล
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // ฟังก์ชันสำหรับตรวจสอบข้อมูลที่จำเป็น
    function hasRequiredFields(data) {
      return data.keys().hasAll(['userId', 'createdAt', 'updatedAt']);
    }
    
    // กฎสำหรับคอลเลกชัน users
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // กฎสำหรับคอลเลกชัน transactions
    match /transactions/{transactionId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        hasRequiredFields(request.resource.data);
    }
    
    // กฎสำหรับคอลเลกชัน categories
    match /categories/{categoryId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        hasRequiredFields(request.resource.data);
    }
    
    // กฎสำหรับคอลเลกชัน budgets
    match /budgets/{budgetId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        hasRequiredFields(request.resource.data);
    }
    
    // กฎสำหรับคอลเลกชัน goals
    match /goals/{goalId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        hasRequiredFields(request.resource.data);
    }
    
    // กฎสำหรับคอลเลกชัน settings
    match /settings/{settingId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid &&
        hasRequiredFields(request.resource.data);
    }
    
    // กฎสำหรับคอลเลกชันอื่นๆ (fallback)
    match /{document=**} {
      allow read, write: if isAuthenticated();
    }
  }
}
